/* app/globals.css */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

/* ========== CSS Variables ========== */
@layer base {
  :root {
    /* Light Mode Colors */
    --background: 0 0% 100%;
    --foreground: 0 0% 0%;
    
    --card: 0 0% 100%;
    --card-foreground: 0 0% 0%;
    
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 0%;
    
    --primary: 0 0% 0%;
    --primary-foreground: 0 0% 100%;
    
    --secondary: 0 0% 96%;
    --secondary-foreground: 0 0% 0%;
    
    --muted: 0 0% 96%;
    --muted-foreground: 0 0% 45%;
    
    --accent: 0 0% 96%;
    --accent-foreground: 0 0% 0%;
    
    --border: 0 0% 90%;
    --input: 0 0% 90%;
    --ring: 0 0% 0%;
    
    --radius: 0.5rem;
    
    /* Glass Effect Variables */
    --glass-bg: rgba(255, 255, 255, 0.1);
    --glass-border: rgba(255, 255, 255, 0.2);
    --glass-shadow: rgba(0, 0, 0, 0.08);
    --glass-hover: rgba(255, 255, 255, 0.15);
    --glass-active: rgba(255, 255, 255, 0.05);
  }
  
  .dark {
    /* Dark Mode Colors */
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;
    
    --card: 0 0% 5%;
    --card-foreground: 0 0% 100%;
    
    --popover: 0 0% 5%;
    --popover-foreground: 0 0% 100%;
    
    --primary: 0 0% 100%;
    --primary-foreground: 0 0% 0%;
    
    --secondary: 0 0% 10%;
    --secondary-foreground: 0 0% 100%;
    
    --muted: 0 0% 10%;
    --muted-foreground: 0 0% 60%;
    
    --accent: 0 0% 10%;
    --accent-foreground: 0 0% 100%;
    
    --border: 0 0% 15%;
    --input: 0 0% 15%;
    --ring: 0 0% 100%;
    
    /* Glass Effect Variables - Dark */
    --glass-bg: rgba(255, 255, 255, 0.05);
    --glass-border: rgba(255, 255, 255, 0.1);
    --glass-shadow: rgba(255, 255, 255, 0.02);
    --glass-hover: rgba(255, 255, 255, 0.08);
    --glass-active: rgba(255, 255, 255, 0.02);
  }
}

/* ========== Base Styles ========== */
@layer base {
  * {
    @apply border-border;
  }
  
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  
  ::-webkit-scrollbar-track {
    @apply bg-transparent;
  }
  
  ::-webkit-scrollbar-thumb {
    @apply bg-muted rounded-full;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    @apply bg-muted-foreground/30;
  }
}

/* ========== Glassmorphism Components ========== */
@layer components {
  /* Glass Card */
  .glass-card {
    background: var(--glass-bg);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid var(--glass-border);
    border-radius: 16px;
    box-shadow: 0 8px 32px 0 var(--glass-shadow);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .glass-card:hover {
    background: var(--glass-hover);
    transform: translateY(-2px);
    box-shadow: 0 12px 40px 0 var(--glass-shadow);
  }
  
  /* Glass Button */
  .glass-button {
    @apply relative overflow-hidden;
    background: var(--glass-bg);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid var(--glass-border);
    border-radius: 12px;
    padding: 10px 20px;
    font-weight: 500;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .glass-button:hover {
    background: var(--glass-hover);
    transform: translateY(-2px);
    box-shadow: 0 8px 24px 0 var(--glass-shadow);
  }
  
  .glass-button:active {
    background: var(--glass-active);
    transform: translateY(0);
  }
  
  /* Glass Input */
  .glass-input {
    background: var(--glass-bg);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid var(--glass-border);
    border-radius: 8px;
    padding: 10px 16px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    @apply outline-none;
  }
  
  .glass-input:focus {
    border-color: var(--ring);
    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.05);
  }
  
  .dark .glass-input:focus {
    box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.05);
  }
  
  /* Glass Modal */
  .glass-modal {
    background: var(--glass-bg);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid var(--glass-border);
    border-radius: 20px;
    box-shadow: 0 20px 60px 0 var(--glass-shadow);
  }
  
  /* Glass Sidebar */
  .glass-sidebar {
    background: var(--glass-bg);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    border-right: 1px solid var(--glass-border);
    height: 100vh;
  }
  
  /* Glass Header */
  .glass-header {
    background: var(--glass-bg);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border-bottom: 1px solid var(--glass-border);
    position: sticky;
    top: 0;
    z-index: 40;
  }
  
  /* Glass Badge */
  .glass-badge {
    background: var(--glass-bg);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    border: 1px solid var(--glass-border);
    border-radius: 9999px;
    padding: 4px 12px;
    font-size: 12px;
    font-weight: 500;
  }
  
  /* Glass Tooltip */
  .glass-tooltip {
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 6px;
    padding: 6px 12px;
    font-size: 12px;
    color: white;
  }
  
  .dark .glass-tooltip {
    background: rgba(255, 255, 255, 0.9);
    color: black;
    border: 1px solid rgba(0, 0, 0, 0.1);
  }
}

/* ========== Animations ========== */
@layer utilities {
  /* Fade animations */
  .animate-fade-in {
    animation: fadeIn 0.5s ease-in-out;
  }
  
  .animate-fade-out {
    animation: fadeOut 0.5s ease-in-out;
  }
  
  /* Slide animations */
  .animate-slide-up {
    animation: slideUp 0.3s ease-out;
  }
  
  .animate-slide-down {
    animation: slideDown 0.3s ease-out;
  }
  
  .animate-slide-left {
    animation: slideLeft 0.3s ease-out;
  }
  
  .animate-slide-right {
    animation: slideRight 0.3s ease-out;
  }
  
  /* Scale animations */
  .animate-scale-in {
    animation: scaleIn 0.2s ease-out;
  }
  
  .animate-scale-out {
    animation: scaleOut 0.2s ease-out;
  }
  
  /* Pulse animation */
  .animate-pulse-slow {
    animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  /* Shimmer loading effect */
  .shimmer {
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    background-size: 200% 100%;
    animation: shimmer 2s linear infinite;
  }
  
  .dark .shimmer {
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.05),
      transparent
    );
    background-size: 200% 100%;
  }
}

/* ========== Keyframes ========== */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes slideUp {
  from {
    transform: translateY(10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideLeft {
  from {
    transform: translateX(10px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideRight {
  from {
    transform: translateX(-10px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.95);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes scaleOut {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.95);
    opacity: 0;
  }
}

@keyframes shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

/* ========== React Flow Overrides ========== */
.react-flow__node {
  @apply glass-card;
}

.react-flow__edge-path {
  @apply stroke-current;
}

.react-flow__controls {
  @apply glass-card;
  button {
    @apply glass-button;
  }
}

.react-flow__minimap {
  @apply glass-card;
}